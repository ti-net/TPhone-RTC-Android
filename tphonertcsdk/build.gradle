plugins {
    id 'com.android.library'
    id 'maven-publish'
}
apply plugin: 'com.kezong.fat-aar'

android {
    compileSdkVersion 31
    buildToolsVersion "31.0.0"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 11
        versionName "${versionName}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            android.libraryVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "tphone_sdk_${versionName}_${variant.buildType.name}.aar"
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    namespace 'com.tinet.tphonertcsdk'
}

allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // kotlin 协程
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0"
    // kotlin 反射
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.6.10"
    // retrofit2 gson 转换库
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    // json 解析库
    api "com.google.code.gson:gson:2.9.0"
    // 网络请求库RT
    api "com.squareup.okhttp3:okhttp:3.14.9"
    api "com.squareup.retrofit2:retrofit:2.9.0"

    // TiCloudRtc SDK
    implementation "com.github.ti-net:TiCloud-RTC-Android:3.7.0"

    embed project(path: ':tiphonelib', configuration: 'default')

}

afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                from components.release
                //建议和github地址对应，否则对jitpack无效
                groupId = "${groupId}"
                //建议和github仓库名称对应，否则对jitpack无效
                artifactId = "${artifactId}"
                //建议和release的tag相同，否则对jitpack无效
                version = "${versionName}"
            }
        }
    }
}